{% if shape.documentation %}
-- | {{ shape.documentation }}
{% endif %}
{{ shape.declaration }}

{% for pat in shape.patterns %}
pattern {{ pat.key }} :: {{ shape.name }}
pattern {{ pat.key }} = {{ shape.constructor }} "{{ pat.value }}"

{% endfor %}
{-# COMPLETE
{% for pat in shape.patterns %}
  {{ pat.key }},
{% endfor %}
  {{ shape.constructor }} #-}

instance FromText {{ shape.name }} where
    parser = ({{ shape.constructor}} . mk) <$> takeText

instance ToText {{ shape.name }} where
    toText ({{ shape.constructor }} ci) = original ci

-- | Represents an enum of /known/ ${{shape.name}}.
--   AWS may have added more since the source was generated.
--   This instance exists only for backward compatibility.
--   fromEnum is a partial function, and will error on values unknown at generation time.
instance Enum {{ shape.name }} where
    toEnum i = case i of
        {% for pat in shape.patterns %}
        {{ pat.index0 }} -> {{ pat.key }}
        {% endfor %}
        _ -> (error . showText) $ "Unknown index for {{ shape.name }}: " <> toText i
    fromEnum x = case x of
        {% for pat in shape.patterns %}
        {{ pat.key }} -> {{ pat.index0 }}
        {% endfor %}    
        {{ shape.constructor }} name -> (error . showText) $ "Unknown {{ shape.name }}: " <> original name

-- | Represents the bounds of /known/ ${{shape.name}}.
--   AWS may have added more since the source was generated.
--   This instance exists only for backward compatibility.
instance Bounded {{ shape.name }} where
    {% for pat in shape.patterns %}
    {% if pat.first %}
    minBound = {{ pat.key }}
    {% endif %}
    {% if pat.last %}
    maxBound = {{ pat.key }}
    {% endif %}
    {% endfor %}

instance Hashable     {{ shape.name }}
instance NFData       {{ shape.name }}
instance ToByteString {{ shape.name }}
instance ToQuery      {{ shape.name }}
instance ToHeader     {{ shape.name }}
{% for inst in shape.instances %}
  {% case inst.value %}
  {% when "ToQuery" %}
  {% when "FromJSON" %}

instance FromJSON {{ shape.name }} where
    parseJSON = parseJSONText "{{ shape.name }}"
  {% when "ToJSON" %}

instance ToJSON {{ shape.name }} where
    toJSON = toJSONText
  {% when "FromXML" %}

instance FromXML {{ shape.name }} where
    parseXML = parseXMLText "{{ shape.name }}"
  {% when "ToXML" %}

instance ToXML {{ shape.name }} where
    toXML = toXMLText
  {% else %}

Error: Attempting to render unrecognized instance '{{ inst.value }}'
  {% endcase %}
{% endfor %}
